<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<sect1 version="5.0" xml:id="deploy-encryption" os="sles;sled"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Device encryption</title>

  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>

  <para>
    This section describes device encryption with LUKS (Linux Unified Key Setup).
    
    actions required to create and configure various types of RAID. <phrase os="sles">In case you need
      background information about LUKS, refer to <xref linkend="cha-configure-cryptctl"/></phrase>.


  </para>
  <para>
    LUKS2 encyrption is supported by the YaST Partitioner (<xref
      linkend="cha-expert-partitioner"/>) as of &sle; 15 SP4, but needs to be
    enabled explicitly. There are two ways to do this:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        Add the paramer to <literal>YAST_LUKS2_AVAILABLE</literal> to the kernel command line when
        booting.
      </para>
    </listitem>
    <listitem>
      <para>
        Enter the &yast; Expert Console with 
        <keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>Shift</keycap><keycap>C</keycap></keycombo>
        in the graphical interface or        
        <keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo> <keycombo><keycap>Shift</keycap><keycap>C</keycap></keycombo>
        in the tex interface.
        Check <guimenu>Enable Experimental LUKS2 Encryption Support</guimenu> and exit the console.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Use the Help button in the installer to see more information about configuring LUKS2.
    Please note that you need a separate, unencrypted boot partition in order to
    encrypt the root file system.
  </para>
  <variablelist>
    <title>Encryption methods</title>
    <varlistentry>
      <term>Regular LUKS1</term>
      <listitem>
        <para>
          allows to encrypt the device using LUKS1 (Linux Unified Key Setup). You have to
          provide the encryption password.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Regluar LUKS2</term>
      <listitem>
        <para>
          allows to encrypt the device using LUKS2. A variant of LUKS
          (Linux Unified Key Setup) that uses a newer version of the header format. That
          allows further possibilities like setting a label to reference the LUKS device
          (for example, in the crypttab file). You have to provide the encryption password
          and the password-based key derivation function (PBKDF) that will be used to protect
          that passphrase.
        </para>
        <para>
          The function to use depends on the context, the hardware capabilities and the
          needed level of compatibility with other system components (see below).
        </para>
        <para>
          <literal>PBKDF2</literal> refers to the function of that name, according to RFC2898. Is the
          function that LUKS1 uses.
        </para>
        <para>
          <literal>Argon2id</literal> and <literal>Argon2i</literal> refer to two variants of a
          function designed to be more secure and to require a lot of memory to be computed.
        </para>
        <para>
          Argon2 is more secure so it should be used if possible. But the large amount of
          memory it uses (which is an intentional security feature) may result in problems
          in some systems. If the strength of the password can be fully assured, then using
          PBKDF2 may still be secure and save memory. On the other hand, Grub2 offers limited
          support to boot from devices encrypted with LUKS2, but only if PBKDF2 is used. So
          you cannot use Argon2 in a file system that contains the /boot directory. Note that
          some manual Grub2 configuration may be needed to boot from a LUKS2 device, even if
          PBKDF2 is used.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Pervasive LUKS2</term>
      <listitem>
        <para>
          allows to encrypt the device using LUKS2 with a master secure key processed by a Crypto
          Express cryptographic coprocessor configured in CCA mode.
          If the cryptographic system already contains a secure key associated to this
          volume, that key will be used. Otherwise, a new secure key will be generated and
          registered in the system. You need to provide an encryption password that will be
          used to protect the access to that master key. Moreover, when there are several APQNs
          in the system, you can select which ones to use.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Encryption with Volatile Random Key</term>
      <listitem>
        <para>
          this encryption method uses randomly generated keys at boot and it
          will not support Hibernation to hard disk. The swap device is re-encrypted during every
          boot, and its previous content is destroyed. You should disable Hibernation through your
          respective DE Power Management Utility and set it to Shutdown on Critical to avoid Data
          Loss!
        </para>
        <para>
          Note both the file system label and the UUID change every time the swap is
          re-encrypted, so they are not valid options to mount a randomly encrypted swap
          device.
        </para>
        <para>
          It is also important to make sure the swap device is referenced in the <filename>/etc/crypttab</filename>
          file by a stable name that is not subject to change on every reboot. For example, for
          a swap partition it is safer to use the udev device id or path instead of the partition
          device name, since that device name may be assigned to a different partition during the
          next boot. If that happens, a wrong device could be encrypted instead of your swap!
        </para>
        <para>  
          &yast; tries to use stable names in <filename>/etc/crypttab</filename>, unless it is
          configured to always use device names (see the Settings section of the Partitioner). But
          for some devices finding a fully stable name may not be possible. Please, only use
          encryption with volatile keys if you are sure about the implications.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Protected Swap</term>
      <listitem>
        <para>
          this encryption method uses a volatile protected AES key (without
          requiring a cryptographic co-processor) to encrypt a swap device. This is an improvement
          over %{random_swap_label} method and all considerations for such method still apply.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Secure Swap</term>
      <listitem>
        <para>
          This encryption method uses a volatile secure AES key (generated
          from a cryptographic co-processor) for encrypting a swap device. This is an improvement
          over %{random_swap_label} method and all considerations for such method still apply.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    For more information on configuring device encryption with LUKS, refer to
    <xref linkend="cha-configure-cryptctl"/>.
  </para>

</sect1>
